import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';

class CustomTextfield extends StatelessWidget {
  final String title;
  final TextStyle style;
  final Function(String)? onChanged;
  final void Function(String?)? onSaved;
  final TextEditingController? controller;
  final Function(String)? onSubmitted;
  final String? errorText;
  final showCursor;
  final readOnly;
  final length;
  final obscure;
  final String? Function(String?)? validator;
  final TextInputType keyboardType;
  final Function? onPressed;

  CustomTextfield({
    required this.title,
    required this.style,
    required this.controller,
    this.onChanged,
    this.onSaved,
    this.onSubmitted,
    this.errorText,
    this.validator,
    this.length,
    required this.keyboardType,
    this.onPressed,
    this.showCursor,
    this.readOnly,
    this.obscure,
  });

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: EdgeInsets.only(left: 20, top: 16, right: 20),
      child: Container(
        decoration: ShapeDecoration(
          gradient: LinearGradient(
            colors: [Color(0xFFe6dfd8), Color(0xFFF6F6F6)],
            begin: Alignment.topCenter,
            end: Alignment.bottomCenter,
            stops: [0.0, 0.1],
            tileMode: TileMode.clamp,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.all(Radius.circular(10.0)),
          ),
        ),
        child: TextFormField(
          decoration: InputDecoration(
            fillColor: Colors.grey.shade100,
            contentPadding: EdgeInsets.all(20),
            border: InputBorder.none,
            focusedBorder: InputBorder.none,
            enabledBorder: InputBorder.none,
            alignLabelWithHint: true,
            hintText: title,
            errorText: errorText,
            hintStyle: style,
            hintMaxLines: 1,
          ),
          enabled: readOnly,
          onChanged: onChanged,
          onSaved: onSaved,
          controller: controller,
          validator: validator,
          inputFormatters: [
            LengthLimitingTextInputFormatter(length),
          ],
          autovalidateMode: AutovalidateMode.onUserInteraction,
        ),
      ),
    );
  }
}

